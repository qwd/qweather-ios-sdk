#if 0
#elif defined(__ARM64_ARCH_8_32__) && __ARM64_ARCH_8_32__
// Generated by Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef QWEATHERSDK_SWIFT_H
#define QWEATHERSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="QWeatherSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC11QWeatherSDK8AirColor")
@interface AirColor : NSObject
@property (nonatomic, readonly) NSInteger red;
@property (nonatomic, readonly) NSInteger green;
@property (nonatomic, readonly) NSInteger blue;
@property (nonatomic, readonly) double alpha;
@end

@class NSString;
SWIFT_CLASS("_TtC11QWeatherSDK8AirDaily")
@interface AirDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@end

@class Refer;
SWIFT_CLASS("_TtC11QWeatherSDK16AirDailyResponse")
@interface AirDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<AirDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class AirIndex;
@class Pollutant;
SWIFT_CLASS("_TtC11QWeatherSDK9AirHourly")
@interface AirHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

@class PrimaryPollutant;
@class Health;
SWIFT_CLASS("_TtC11QWeatherSDK8AirIndex")
@interface AirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) double aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@property (nonatomic, readonly, copy) NSString * _Nullable level;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, strong) AirColor * _Nonnull color;
@property (nonatomic, readonly, strong) PrimaryPollutant * _Nullable primaryPollutant;
@property (nonatomic, readonly, strong) Health * _Nullable health;
@end

SWIFT_CLASS("_TtC11QWeatherSDK6AirNow")
@interface AirNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class AirStation;
SWIFT_CLASS("_TtC11QWeatherSDK14AirNowResponse")
@interface AirNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) AirNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<AirStation *> * _Nonnull station;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class NSNumber;
SWIFT_CLASS("_TtC11QWeatherSDK12AirParameter")
@interface AirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirStation")
@interface AirStation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class Metadata;
@class Station;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1CurrentResponse")
@interface AirV1CurrentResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@property (nonatomic, readonly, copy) NSArray<Station *> * _Nonnull stations;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirV1Daily")
@interface AirV1Daily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastStartTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastEndTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18AirV1DailyResponse")
@interface AirV1DailyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirV1Daily *> * _Nonnull days;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19AirV1HourlyResponse")
@interface AirV1HourlyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirHourly *> * _Nonnull hours;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14AirV1Parameter")
@interface AirV1Parameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AirV1StationParameter")
@interface AirV1StationParameter : NSObject
+ (nonnull instancetype)instanceWithLocationID:(NSString * _Nonnull)locationID lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class StationPollutant;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1StationResponse")
@interface AirV1StationResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<StationPollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22AstronomyMoonParameter")
@interface AstronomyMoonParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MoonPhase;
SWIFT_CLASS("_TtC11QWeatherSDK21AstronomyMoonResponse")
@interface AstronomyMoonResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSArray<MoonPhase *> * _Nonnull moonPhase;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK36AstronomySolarElevationAngleResponse")
@interface AstronomySolarElevationAngleResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarElevationAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarAzimuthAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarHour;
@property (nonatomic, readonly, copy) NSString * _Nonnull hourAngle;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AstronomySunParameter")
@interface AstronomySunParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20AstronomySunResponse")
@interface AstronomySunResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

/// The major global ocean basins.
/// <h2>Topics</h2>
/// <h3>Basins</h3>
/// <ul>
///   <li>
///     <code>AL</code>
///   </li>
///   <li>
///     <code>EP</code>
///   </li>
///   <li>
///     <code>NP</code>
///   </li>
///   <li>
///     <code>SP</code>
///   </li>
///   <li>
///     <code>NI</code>
///   </li>
///   <li>
///     <code>SI</code>
///   </li>
/// </ul>
/// <h3>Comparing Basins</h3>
/// <ul>
///   <li>
///     <code>!=(_:_:)</code>
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, Basin, open) {
/// North Atlantic
  BasinAL = 0,
/// Eastern Pacific
  BasinEP = 1,
/// NorthWest Pacific
  BasinNP = 2,
/// SouthWestern Pacific
  BasinSP = 3,
/// North Indian Ocean
  BasinNI = 4,
/// South Indian Ocean
  BasinSI = 5,
};

SWIFT_CLASS("_TtC11QWeatherSDK14CurrentsHourly")
@interface CurrentsHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speed;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13CurrentsTable")
@interface CurrentsTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speedMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11ErrorDetail")
@interface ErrorDetail : NSObject
@property (nonatomic, readonly) NSInteger status;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull detail;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable invalidParams;
@property (nonatomic, readonly, copy) NSString * _Nullable referenceDoc;
+ (ErrorDetail * _Nullable)fromMap:(NSDictionary<NSString *, id> * _Nonnull)map SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK13ErrorResponse")
@interface ErrorResponse : NSObject
@property (nonatomic, readonly, strong) ErrorDetail * _Nonnull error;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22GeoCityLookupParameter")
@interface GeoCityLookupParameter : NSObject
+ (GeoCityLookupParameter * _Nonnull)instanceWithLocation:(NSString * _Nonnull)location adm:(NSString * _Nullable)adm range:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Location;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoCityLookupResponse")
@interface GeoCityLookupResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull location;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19GeoCityTopParameter")
@interface GeoCityTopParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GeoCityTopResponse")
@interface GeoCityTopResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull topCityList;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

enum Poi : NSInteger;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoPoiLookupParameter")
@interface GeoPoiLookupParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type city:(NSString * _Nullable)city number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GeoPoiRangeParameter")
@interface GeoPoiRangeParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type radius:(NSNumber * _Nullable)radius number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK14GeoPoiResponse")
@interface GeoPoiResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull poi;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9GridDaily")
@interface GridDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17GridDailyResponse")
@interface GridDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10GridHourly")
@interface GridHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GridHourlyResponse")
@interface GridHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK7GridNow")
@interface GridNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15GridNowResponse")
@interface GridNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) GridNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GridWeatherParameter")
@interface GridWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HealthAdvice;
SWIFT_CLASS("_TtC11QWeatherSDK6Health")
@interface Health : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable effect;
@property (nonatomic, readonly, strong) HealthAdvice * _Nullable advice;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12HealthAdvice")
@interface HealthAdvice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable generalPopulation;
@property (nonatomic, readonly, copy) NSString * _Nullable sensitivePopulation;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19HistoricalAirHourly")
@interface HistoricalAirHourly : NSObject
/// 空气质量数据发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 空气质量指数
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
/// 空气质量指数等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 空气质量指数级别
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 空气质量的主要污染物，空气质量为优时，返回值为NA
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
/// PM10
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
/// PM2.5
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
/// 二氧化氮
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
/// 二氧化硫
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
/// 一氧化碳
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
/// 臭氧
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalAirParameter")
@interface HistoricalAirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21HistoricalAirResponse")
@interface HistoricalAirResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<HistoricalAirHourly *> * _Nonnull airHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalWeatherDaily")
@interface HistoricalWeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK23HistoricalWeatherHourly")
@interface HistoricalWeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK26HistoricalWeatherParameter")
@interface HistoricalWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK25HistoricalWeatherResponse")
@interface HistoricalWeatherResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) HistoricalWeatherDaily * _Nonnull weatherDaily;
@property (nonatomic, readonly, copy) NSArray<HistoricalWeatherHourly *> * _Nonnull weatherHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Indices, open) {
  IndicesALL = 0,
  IndicesSPT = 1,
  IndicesCW = 2,
  IndicesDRSG = 3,
  IndicesFIS = 4,
  IndicesUV = 5,
  IndicesTRA = 6,
  IndicesAG = 7,
  IndicesCOMF = 8,
  IndicesFLU = 9,
  IndicesAP = 10,
  IndicesAC = 11,
  IndicesGL = 12,
  IndicesMU = 13,
  IndicesDC = 14,
  IndicesPTFC = 15,
  IndicesSPI = 16,
};

/// 天气指数
SWIFT_CLASS("_TtC11QWeatherSDK12IndicesDaily")
@interface IndicesDaily : NSObject
/// 预报日期
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
/// 生活指数类型ID
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 生活指数类型的名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 生活指数预报等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 生活指数预报级别名称
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 生活指数预报的详细描述，可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20IndicesDailyResponse")
@interface IndicesDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<IndicesDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16IndicesParameter")
@interface IndicesParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(NSArray<NSNumber *> * _Nonnull)type lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Lang, open) {
  LangZH_HANS = 0,
  LangZH_HANT = 1,
  LangEN = 2,
  LangDE = 3,
  LangES = 4,
  LangFR = 5,
  LangIT = 6,
  LangJA = 7,
  LangKO = 8,
  LangRU = 9,
  LangHI = 10,
  LangTH = 11,
  LangAR = 12,
  LangPT = 13,
  LangBN = 14,
  LangMS = 15,
  LangNL = 16,
  LangEL = 17,
  LangLA = 18,
  LangSV = 19,
  LangID = 20,
  LangPL = 21,
  LangTR = 22,
  LangCS = 23,
  LangET = 24,
  LangVI = 25,
  LangFIL = 26,
  LangFI = 27,
  LangHE = 28,
  LangIS = 29,
  LangNB = 30,
};

SWIFT_CLASS("_TtC11QWeatherSDK8Location")
@interface Location : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull cid;
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm2;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm1;
@property (nonatomic, readonly, copy) NSString * _Nonnull country;
@property (nonatomic, readonly, copy) NSString * _Nonnull tz;
@property (nonatomic, readonly, copy) NSString * _Nonnull utcOffset;
@property (nonatomic, readonly, copy) NSString * _Nonnull isDst;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull rank;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Metadata")
@interface Metadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull tag;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Minutely")
@interface Minutely : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17MinutelyParameter")
@interface MinutelyParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK16MinutelyResponse")
@interface MinutelyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull summary;
@property (nonatomic, readonly, copy) NSArray<Minutely *> * _Nonnull minutely;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9MoonPhase")
@interface MoonPhase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull illumination;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21OceanCurrentsResponse")
@interface OceanCurrentsResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<CurrentsTable *> * _Nonnull currentsTable;
@property (nonatomic, readonly, copy) NSArray<CurrentsHourly *> * _Nonnull currentsHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14OceanParameter")
@interface OceanParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TideTable;
@class TideHourly;
SWIFT_CLASS("_TtC11QWeatherSDK17OceanTideResponse")
@interface OceanTideResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<TideTable *> * _Nonnull tideTable;
@property (nonatomic, readonly, copy) NSArray<TideHourly *> * _Nonnull tideHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Poi, open) {
  PoiSCENIC = 0,
/// 潮汐站点
  PoiCSTA = 1,
/// 潮流站点
  PoiTSTA = 2,
};

@class PollutantConcentration;
@class SubAirIndex;
SWIFT_CLASS("_TtC11QWeatherSDK9Pollutant")
@interface Pollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@property (nonatomic, readonly, copy) NSArray<SubAirIndex *> * _Nonnull subIndexes;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22PollutantConcentration")
@interface PollutantConcentration : NSObject
@property (nonatomic, readonly) double value;
@property (nonatomic, readonly, copy) NSString * _Nonnull unit;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16PrimaryPollutant")
@interface PrimaryPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@end

typedef SWIFT_ENUM(NSInteger, QWeatherErrorStatus, open) {
  QWeatherErrorStatusNotToken = 101,
  QWeatherErrorStatusCommon = 102,
  QWeatherErrorStatusErrorResponse = 103,
};

@class NSError;
@class WeatherParameter;
@class WeatherNowResponse;
@class WeatherDailyResponse;
@class WeatherHourlyResponse;
@class WarningNowParameter;
@class WarningResponse;
@class WarningListParameter;
@class WarningListResponse;
@class StormListParameter;
@class StormListResponse;
@class StormParameter;
@class StormForecastResponse;
@class StormTrackResponse;
@class SolarElevationAngleParameter;
SWIFT_CLASS("_TtC11QWeatherSDK12QWeatherObjc")
@interface QWeatherObjc : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)initConfigWithHost:(NSString * _Nonnull)host SWIFT_METHOD_FAMILY(none);
+ (void)setupHost:(NSString * _Nonnull)host;
+ (void)setupTokenGeneratorWithGenerater:(NSString * _Nonnull (^ _Nonnull)(void))generater;
+ (void)setupTokenGeneratorWithPrivateKey:(NSString * _Nonnull)privateKey pid:(NSString * _Nonnull)pid kid:(NSString * _Nonnull)kid;
+ (void)setupLogEnable:(BOOL)enable;
+ (void)geoCityLookup:(GeoCityLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityLookupResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoCityTop:(GeoCityTopParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityTopResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiLookup:(GeoPoiLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiRange:(GeoPoiRangeParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weatherNow:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather3d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather7d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather10d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather15d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather30d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather24h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather72h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather168h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)minutely:(MinutelyParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(MinutelyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)gridNow:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid3d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid7d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid24h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid72h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningNow:(WarningNowParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningList:(WarningListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices1d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices3d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airNow:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)air5d:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airCurrent:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1CurrentResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airDaily:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1DailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airHourly:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1HourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airStation:(AirV1StationParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1StationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalWeather:(HistoricalWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalWeatherResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalAir:(HistoricalAirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalAirResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormList:(StormListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormForecast:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormForecastResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormTrack:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormTrackResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanTide:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanTideResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanCurrents:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanCurrentsResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySun:(AstronomySunParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySunResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomyMoon:(AstronomyMoonParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomyMoonResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySolarElevationAngle:(SolarElevationAngleParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySolarElevationAngleResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

typedef SWIFT_ENUM(NSInteger, Range, open) {
  RangeCN = 0,
  RangeAF = 1,
  RangeAX = 2,
  RangeAL = 3,
  RangeDZ = 4,
  RangeAS = 5,
  RangeAD = 6,
  RangeAO = 7,
  RangeAI = 8,
  RangeAQ = 9,
  RangeAG = 10,
  RangeAR = 11,
  RangeAM = 12,
  RangeAW = 13,
  RangeAU = 14,
  RangeAT = 15,
  RangeAZ = 16,
  RangeBS = 17,
  RangeBH = 18,
  RangeBD = 19,
  RangeBB = 20,
  RangeBY = 21,
  RangeBE = 22,
  RangeBZ = 23,
  RangeBJ = 24,
  RangeBM = 25,
  RangeBT = 26,
  RangeBO = 27,
  RangeBQ = 28,
  RangeBA = 29,
  RangeBW = 30,
  RangeBV = 31,
  RangeBR = 32,
  RangeIO = 33,
  RangeBN = 34,
  RangeBG = 35,
  RangeBF = 36,
  RangeBI = 37,
  RangeCV = 38,
  RangeKH = 39,
  RangeCM = 40,
  RangeCA = 41,
  RangeKY = 42,
  RangeCF = 43,
  RangeTD = 44,
  RangeCL = 45,
  RangeCX = 46,
  RangeCC = 47,
  RangeCO = 48,
  RangeKM = 49,
  RangeCG = 50,
  RangeCD = 51,
  RangeCK = 52,
  RangeCR = 53,
  RangeCI = 54,
  RangeHR = 55,
  RangeCU = 56,
  RangeCW = 57,
  RangeCY = 58,
  RangeCZ = 59,
  RangeDK = 60,
  RangeDJ = 61,
  RangeDM = 62,
  RangeDO = 63,
  RangeEC = 64,
  RangeEG = 65,
  RangeSV = 66,
  RangeGQ = 67,
  RangeER = 68,
  RangeEE = 69,
  RangeET = 70,
  RangeFK = 71,
  RangeFO = 72,
  RangeFJ = 73,
  RangeFI = 74,
  RangeFR = 75,
  RangeGF = 76,
  RangePF = 77,
  RangeTF = 78,
  RangeGA = 79,
  RangeGM = 80,
  RangeGE = 81,
  RangeDE = 82,
  RangeGH = 83,
  RangeGI = 84,
  RangeGR = 85,
  RangeGL = 86,
  RangeGD = 87,
  RangeGP = 88,
  RangeGU = 89,
  RangeGT = 90,
  RangeGG = 91,
  RangeGN = 92,
  RangeGW = 93,
  RangeGY = 94,
  RangeHT = 95,
  RangeHM = 96,
  RangeVA = 97,
  RangeHN = 98,
  RangeHK = 99,
  RangeHU = 100,
  RangeIS = 101,
  RangeIN = 102,
  RangeID = 103,
  RangeIR = 104,
  RangeIQ = 105,
  RangeIE = 106,
  RangeIM = 107,
  RangeIL = 108,
  RangeIT = 109,
  RangeJM = 110,
  RangeJP = 111,
  RangeJE = 112,
  RangeJO = 113,
  RangeKZ = 114,
  RangeKE = 115,
  RangeKI = 116,
  RangeKP = 117,
  RangeKR = 118,
  RangeKW = 119,
  RangeKG = 120,
  RangeLA = 121,
  RangeLV = 122,
  RangeLB = 123,
  RangeLS = 124,
  RangeLR = 125,
  RangeLY = 126,
  RangeLI = 127,
  RangeLT = 128,
  RangeLU = 129,
  RangeMO = 130,
  RangeMK = 131,
  RangeMG = 132,
  RangeMW = 133,
  RangeMY = 134,
  RangeMV = 135,
  RangeML = 136,
  RangeMT = 137,
  RangeMH = 138,
  RangeMQ = 139,
  RangeMR = 140,
  RangeMU = 141,
  RangeYT = 142,
  RangeMX = 143,
  RangeFM = 144,
  RangeMD = 145,
  RangeMC = 146,
  RangeMN = 147,
  RangeME = 148,
  RangeMS = 149,
  RangeMA = 150,
  RangeMZ = 151,
  RangeMM = 152,
  RangeNA = 153,
  RangeNR = 154,
  RangeNP = 155,
  RangeNL = 156,
  RangeNC = 157,
  RangeNZ = 158,
  RangeNI = 159,
  RangeNE = 160,
  RangeNG = 161,
  RangeNU = 162,
  RangeNF = 163,
  RangeMP = 164,
  RangeNO = 165,
  RangeOM = 166,
  RangePK = 167,
  RangePW = 168,
  RangePS = 169,
  RangePA = 170,
  RangePG = 171,
  RangePY = 172,
  RangePE = 173,
  RangePH = 174,
  RangePN = 175,
  RangePL = 176,
  RangePT = 177,
  RangePR = 178,
  RangeQA = 179,
  RangeRE = 180,
  RangeRO = 181,
  RangeRU = 182,
  RangeRW = 183,
  RangeBL = 184,
  RangeSH = 185,
  RangeKN = 186,
  RangeLC = 187,
  RangeMF = 188,
  RangePM = 189,
  RangeVC = 190,
  RangeWS = 191,
  RangeSM = 192,
  RangeST = 193,
  RangeSA = 194,
  RangeSN = 195,
  RangeRS = 196,
  RangeSC = 197,
  RangeSL = 198,
  RangeSG = 199,
  RangeSX = 200,
  RangeSK = 201,
  RangeSI = 202,
  RangeSB = 203,
  RangeSO = 204,
  RangeZA = 205,
  RangeGS = 206,
  RangeSS = 207,
  RangeES = 208,
  RangeLK = 209,
  RangeSD = 210,
  RangeSR = 211,
  RangeSJ = 212,
  RangeSZ = 213,
  RangeSE = 214,
  RangeCH = 215,
  RangeSY = 216,
  RangeTW = 217,
  RangeTJ = 218,
  RangeTZ = 219,
  RangeTH = 220,
  RangeTL = 221,
  RangeTG = 222,
  RangeTK = 223,
  RangeTO = 224,
  RangeTT = 225,
  RangeTN = 226,
  RangeTR = 227,
  RangeTM = 228,
  RangeTC = 229,
  RangeTV = 230,
  RangeUG = 231,
  RangeUA = 232,
  RangeAE = 233,
  RangeGB = 234,
  RangeUS = 235,
  RangeUM = 236,
  RangeUY = 237,
  RangeUZ = 238,
  RangeVU = 239,
  RangeVE = 240,
  RangeVN = 241,
  RangeVG = 242,
  RangeVI = 243,
  RangeWF = 244,
  RangeEH = 245,
  RangeYE = 246,
  RangeZM = 247,
  RangeZW = 248,
};

SWIFT_CLASS("_TtC11QWeatherSDK5Refer")
@interface Refer : NSObject
/// 原始数据来源，或数据源说明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
/// 数据许可或版权声明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable license;
@end

SWIFT_CLASS("_TtC11QWeatherSDK28SolarElevationAngleParameter")
@interface SolarElevationAngleParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date time:(NSString * _Nonnull)time tz:(NSString * _Nonnull)tz alt:(NSString * _Nonnull)alt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK7Station")
@interface Station : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16StationPollutant")
@interface StationPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@end

SWIFT_CLASS("_TtC11QWeatherSDK5Storm")
@interface Storm : NSObject
/// 台风ID
@property (nonatomic, readonly, copy) NSString * _Nonnull stormId;
/// 台风名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 台风所处流域
@property (nonatomic, readonly, copy) NSString * _Nonnull basin;
/// 台风所处年份
@property (nonatomic, readonly, copy) NSString * _Nonnull year;
/// 是否为活跃台风。1 活跃台风，0 停编。
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13StormForecast")
@interface StormForecast : NSObject
/// 台风预报时间
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nullable moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nullable moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nullable move360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21StormForecastResponse")
@interface StormForecastResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<StormForecast *> * _Nonnull forecast;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormListParameter")
@interface StormListParameter : NSObject
+ (nonnull instancetype)instanceWithBasin:(enum Basin)basin year:(NSInteger)year SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK17StormListResponse")
@interface StormListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Storm *> * _Nonnull storm;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class StormWindRadius;
SWIFT_CLASS("_TtC11QWeatherSDK8StormNow")
@interface StormNow : NSObject
/// 台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14StormParameter")
@interface StormParameter : NSObject
+ (nonnull instancetype)instanceWithStormid:(NSString * _Nonnull)stormid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10StormTrack")
@interface StormTrack : NSObject
/// 当前台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormTrackResponse")
@interface StormTrackResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@property (nonatomic, readonly, strong) StormNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<StormTrack *> * _Nonnull track;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15StormWindRadius")
@interface StormWindRadius : NSObject
/// 东北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable neRadius;
/// 东南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable seRadius;
/// 西南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable swRadius;
/// 西北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable nwRadius;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11SubAirIndex")
@interface SubAirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10TideHourly")
@interface TideHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9TideTable")
@interface TideTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

typedef SWIFT_ENUM(NSInteger, Unit, open) {
  UnitMETRIC = 0,
  UnitIMPERIAL = 1,
};

SWIFT_CLASS("_TtC11QWeatherSDK7Warning")
@interface Warning : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull warningId;
@property (nonatomic, readonly, copy) NSString * _Nonnull sender;
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull startTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull endTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull severity;
@property (nonatomic, readonly, copy) NSString * _Nonnull severityColor;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeName;
@property (nonatomic, readonly, copy) NSString * _Nonnull urgency;
@property (nonatomic, readonly, copy) NSString * _Nonnull certainty;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull related;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WarningListParameter")
@interface WarningListParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(enum Range)range SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WarningLocation;
SWIFT_CLASS("_TtC11QWeatherSDK19WarningListResponse")
@interface WarningListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSArray<WarningLocation *> * _Nonnull warningLocList;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningLocation")
@interface WarningLocation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull locationId;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19WarningNowParameter")
@interface WarningNowParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningResponse")
@interface WarningResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Warning *> * _Nonnull warning;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12WeatherDaily")
@interface WeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhaseIcon;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull uvIndex;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WeatherDailyResponse")
@interface WeatherDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13WeatherHourly")
@interface WeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pop;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21WeatherHourlyResponse")
@interface WeatherHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10WeatherNow")
@interface WeatherNow : NSObject
/// 数据观测时间
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
/// 温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
/// 体感温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
/// 天气状况的图标代码，另请参考天气图标项目
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
/// 天气状况的文字描述，包括阴晴雨雪等天气状态的描述
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// 风向360角度
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
/// 风向
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
/// 风力等级
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
/// 风速，公里/小时
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 相对湿度，百分比数值
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
/// 过去1小时降水量，默认单位：毫米
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
/// 大气压强，默认单位：百帕
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 能见度，默认单位：公里
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
/// 云量，百分比数值。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
/// 露点温度。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18WeatherNowResponse")
@interface WeatherNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) WeatherNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16WeatherParameter")
@interface WeatherParameter : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull location;
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef QWEATHERSDK_SWIFT_H
#define QWEATHERSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="QWeatherSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC11QWeatherSDK8AirColor")
@interface AirColor : NSObject
@property (nonatomic, readonly) NSInteger red;
@property (nonatomic, readonly) NSInteger green;
@property (nonatomic, readonly) NSInteger blue;
@property (nonatomic, readonly) double alpha;
@end

@class NSString;
SWIFT_CLASS("_TtC11QWeatherSDK8AirDaily")
@interface AirDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@end

@class Refer;
SWIFT_CLASS("_TtC11QWeatherSDK16AirDailyResponse")
@interface AirDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<AirDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class AirIndex;
@class Pollutant;
SWIFT_CLASS("_TtC11QWeatherSDK9AirHourly")
@interface AirHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

@class PrimaryPollutant;
@class Health;
SWIFT_CLASS("_TtC11QWeatherSDK8AirIndex")
@interface AirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) double aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@property (nonatomic, readonly, copy) NSString * _Nullable level;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, strong) AirColor * _Nonnull color;
@property (nonatomic, readonly, strong) PrimaryPollutant * _Nullable primaryPollutant;
@property (nonatomic, readonly, strong) Health * _Nullable health;
@end

SWIFT_CLASS("_TtC11QWeatherSDK6AirNow")
@interface AirNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class AirStation;
SWIFT_CLASS("_TtC11QWeatherSDK14AirNowResponse")
@interface AirNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) AirNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<AirStation *> * _Nonnull station;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class NSNumber;
SWIFT_CLASS("_TtC11QWeatherSDK12AirParameter")
@interface AirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirStation")
@interface AirStation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class Metadata;
@class Station;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1CurrentResponse")
@interface AirV1CurrentResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@property (nonatomic, readonly, copy) NSArray<Station *> * _Nonnull stations;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirV1Daily")
@interface AirV1Daily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastStartTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastEndTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18AirV1DailyResponse")
@interface AirV1DailyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirV1Daily *> * _Nonnull days;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19AirV1HourlyResponse")
@interface AirV1HourlyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirHourly *> * _Nonnull hours;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14AirV1Parameter")
@interface AirV1Parameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AirV1StationParameter")
@interface AirV1StationParameter : NSObject
+ (nonnull instancetype)instanceWithLocationID:(NSString * _Nonnull)locationID lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class StationPollutant;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1StationResponse")
@interface AirV1StationResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<StationPollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22AstronomyMoonParameter")
@interface AstronomyMoonParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MoonPhase;
SWIFT_CLASS("_TtC11QWeatherSDK21AstronomyMoonResponse")
@interface AstronomyMoonResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSArray<MoonPhase *> * _Nonnull moonPhase;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK36AstronomySolarElevationAngleResponse")
@interface AstronomySolarElevationAngleResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarElevationAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarAzimuthAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarHour;
@property (nonatomic, readonly, copy) NSString * _Nonnull hourAngle;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AstronomySunParameter")
@interface AstronomySunParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20AstronomySunResponse")
@interface AstronomySunResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

/// The major global ocean basins.
/// <h2>Topics</h2>
/// <h3>Basins</h3>
/// <ul>
///   <li>
///     <code>AL</code>
///   </li>
///   <li>
///     <code>EP</code>
///   </li>
///   <li>
///     <code>NP</code>
///   </li>
///   <li>
///     <code>SP</code>
///   </li>
///   <li>
///     <code>NI</code>
///   </li>
///   <li>
///     <code>SI</code>
///   </li>
/// </ul>
/// <h3>Comparing Basins</h3>
/// <ul>
///   <li>
///     <code>!=(_:_:)</code>
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, Basin, open) {
/// North Atlantic
  BasinAL = 0,
/// Eastern Pacific
  BasinEP = 1,
/// NorthWest Pacific
  BasinNP = 2,
/// SouthWestern Pacific
  BasinSP = 3,
/// North Indian Ocean
  BasinNI = 4,
/// South Indian Ocean
  BasinSI = 5,
};

SWIFT_CLASS("_TtC11QWeatherSDK14CurrentsHourly")
@interface CurrentsHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speed;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13CurrentsTable")
@interface CurrentsTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speedMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11ErrorDetail")
@interface ErrorDetail : NSObject
@property (nonatomic, readonly) NSInteger status;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull detail;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable invalidParams;
@property (nonatomic, readonly, copy) NSString * _Nullable referenceDoc;
+ (ErrorDetail * _Nullable)fromMap:(NSDictionary<NSString *, id> * _Nonnull)map SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK13ErrorResponse")
@interface ErrorResponse : NSObject
@property (nonatomic, readonly, strong) ErrorDetail * _Nonnull error;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22GeoCityLookupParameter")
@interface GeoCityLookupParameter : NSObject
+ (GeoCityLookupParameter * _Nonnull)instanceWithLocation:(NSString * _Nonnull)location adm:(NSString * _Nullable)adm range:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Location;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoCityLookupResponse")
@interface GeoCityLookupResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull location;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19GeoCityTopParameter")
@interface GeoCityTopParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GeoCityTopResponse")
@interface GeoCityTopResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull topCityList;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

enum Poi : NSInteger;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoPoiLookupParameter")
@interface GeoPoiLookupParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type city:(NSString * _Nullable)city number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GeoPoiRangeParameter")
@interface GeoPoiRangeParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type radius:(NSNumber * _Nullable)radius number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK14GeoPoiResponse")
@interface GeoPoiResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull poi;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9GridDaily")
@interface GridDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17GridDailyResponse")
@interface GridDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10GridHourly")
@interface GridHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GridHourlyResponse")
@interface GridHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK7GridNow")
@interface GridNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15GridNowResponse")
@interface GridNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) GridNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GridWeatherParameter")
@interface GridWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HealthAdvice;
SWIFT_CLASS("_TtC11QWeatherSDK6Health")
@interface Health : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable effect;
@property (nonatomic, readonly, strong) HealthAdvice * _Nullable advice;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12HealthAdvice")
@interface HealthAdvice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable generalPopulation;
@property (nonatomic, readonly, copy) NSString * _Nullable sensitivePopulation;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19HistoricalAirHourly")
@interface HistoricalAirHourly : NSObject
/// 空气质量数据发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 空气质量指数
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
/// 空气质量指数等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 空气质量指数级别
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 空气质量的主要污染物，空气质量为优时，返回值为NA
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
/// PM10
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
/// PM2.5
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
/// 二氧化氮
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
/// 二氧化硫
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
/// 一氧化碳
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
/// 臭氧
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalAirParameter")
@interface HistoricalAirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21HistoricalAirResponse")
@interface HistoricalAirResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<HistoricalAirHourly *> * _Nonnull airHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalWeatherDaily")
@interface HistoricalWeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK23HistoricalWeatherHourly")
@interface HistoricalWeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK26HistoricalWeatherParameter")
@interface HistoricalWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK25HistoricalWeatherResponse")
@interface HistoricalWeatherResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) HistoricalWeatherDaily * _Nonnull weatherDaily;
@property (nonatomic, readonly, copy) NSArray<HistoricalWeatherHourly *> * _Nonnull weatherHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Indices, open) {
  IndicesALL = 0,
  IndicesSPT = 1,
  IndicesCW = 2,
  IndicesDRSG = 3,
  IndicesFIS = 4,
  IndicesUV = 5,
  IndicesTRA = 6,
  IndicesAG = 7,
  IndicesCOMF = 8,
  IndicesFLU = 9,
  IndicesAP = 10,
  IndicesAC = 11,
  IndicesGL = 12,
  IndicesMU = 13,
  IndicesDC = 14,
  IndicesPTFC = 15,
  IndicesSPI = 16,
};

/// 天气指数
SWIFT_CLASS("_TtC11QWeatherSDK12IndicesDaily")
@interface IndicesDaily : NSObject
/// 预报日期
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
/// 生活指数类型ID
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 生活指数类型的名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 生活指数预报等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 生活指数预报级别名称
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 生活指数预报的详细描述，可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20IndicesDailyResponse")
@interface IndicesDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<IndicesDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16IndicesParameter")
@interface IndicesParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(NSArray<NSNumber *> * _Nonnull)type lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Lang, open) {
  LangZH_HANS = 0,
  LangZH_HANT = 1,
  LangEN = 2,
  LangDE = 3,
  LangES = 4,
  LangFR = 5,
  LangIT = 6,
  LangJA = 7,
  LangKO = 8,
  LangRU = 9,
  LangHI = 10,
  LangTH = 11,
  LangAR = 12,
  LangPT = 13,
  LangBN = 14,
  LangMS = 15,
  LangNL = 16,
  LangEL = 17,
  LangLA = 18,
  LangSV = 19,
  LangID = 20,
  LangPL = 21,
  LangTR = 22,
  LangCS = 23,
  LangET = 24,
  LangVI = 25,
  LangFIL = 26,
  LangFI = 27,
  LangHE = 28,
  LangIS = 29,
  LangNB = 30,
};

SWIFT_CLASS("_TtC11QWeatherSDK8Location")
@interface Location : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull cid;
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm2;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm1;
@property (nonatomic, readonly, copy) NSString * _Nonnull country;
@property (nonatomic, readonly, copy) NSString * _Nonnull tz;
@property (nonatomic, readonly, copy) NSString * _Nonnull utcOffset;
@property (nonatomic, readonly, copy) NSString * _Nonnull isDst;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull rank;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Metadata")
@interface Metadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull tag;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Minutely")
@interface Minutely : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17MinutelyParameter")
@interface MinutelyParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK16MinutelyResponse")
@interface MinutelyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull summary;
@property (nonatomic, readonly, copy) NSArray<Minutely *> * _Nonnull minutely;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9MoonPhase")
@interface MoonPhase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull illumination;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21OceanCurrentsResponse")
@interface OceanCurrentsResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<CurrentsTable *> * _Nonnull currentsTable;
@property (nonatomic, readonly, copy) NSArray<CurrentsHourly *> * _Nonnull currentsHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14OceanParameter")
@interface OceanParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TideTable;
@class TideHourly;
SWIFT_CLASS("_TtC11QWeatherSDK17OceanTideResponse")
@interface OceanTideResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<TideTable *> * _Nonnull tideTable;
@property (nonatomic, readonly, copy) NSArray<TideHourly *> * _Nonnull tideHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Poi, open) {
  PoiSCENIC = 0,
/// 潮汐站点
  PoiCSTA = 1,
/// 潮流站点
  PoiTSTA = 2,
};

@class PollutantConcentration;
@class SubAirIndex;
SWIFT_CLASS("_TtC11QWeatherSDK9Pollutant")
@interface Pollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@property (nonatomic, readonly, copy) NSArray<SubAirIndex *> * _Nonnull subIndexes;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22PollutantConcentration")
@interface PollutantConcentration : NSObject
@property (nonatomic, readonly) double value;
@property (nonatomic, readonly, copy) NSString * _Nonnull unit;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16PrimaryPollutant")
@interface PrimaryPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@end

typedef SWIFT_ENUM(NSInteger, QWeatherErrorStatus, open) {
  QWeatherErrorStatusNotToken = 101,
  QWeatherErrorStatusCommon = 102,
  QWeatherErrorStatusErrorResponse = 103,
};

@class NSError;
@class WeatherParameter;
@class WeatherNowResponse;
@class WeatherDailyResponse;
@class WeatherHourlyResponse;
@class WarningNowParameter;
@class WarningResponse;
@class WarningListParameter;
@class WarningListResponse;
@class StormListParameter;
@class StormListResponse;
@class StormParameter;
@class StormForecastResponse;
@class StormTrackResponse;
@class SolarElevationAngleParameter;
SWIFT_CLASS("_TtC11QWeatherSDK12QWeatherObjc")
@interface QWeatherObjc : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)initConfigWithHost:(NSString * _Nonnull)host SWIFT_METHOD_FAMILY(none);
+ (void)setupHost:(NSString * _Nonnull)host;
+ (void)setupTokenGeneratorWithGenerater:(NSString * _Nonnull (^ _Nonnull)(void))generater;
+ (void)setupTokenGeneratorWithPrivateKey:(NSString * _Nonnull)privateKey pid:(NSString * _Nonnull)pid kid:(NSString * _Nonnull)kid;
+ (void)setupLogEnable:(BOOL)enable;
+ (void)geoCityLookup:(GeoCityLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityLookupResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoCityTop:(GeoCityTopParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityTopResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiLookup:(GeoPoiLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiRange:(GeoPoiRangeParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weatherNow:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather3d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather7d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather10d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather15d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather30d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather24h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather72h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather168h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)minutely:(MinutelyParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(MinutelyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)gridNow:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid3d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid7d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid24h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid72h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningNow:(WarningNowParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningList:(WarningListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices1d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices3d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airNow:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)air5d:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airCurrent:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1CurrentResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airDaily:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1DailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airHourly:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1HourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airStation:(AirV1StationParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1StationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalWeather:(HistoricalWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalWeatherResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalAir:(HistoricalAirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalAirResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormList:(StormListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormForecast:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormForecastResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormTrack:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormTrackResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanTide:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanTideResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanCurrents:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanCurrentsResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySun:(AstronomySunParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySunResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomyMoon:(AstronomyMoonParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomyMoonResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySolarElevationAngle:(SolarElevationAngleParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySolarElevationAngleResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

typedef SWIFT_ENUM(NSInteger, Range, open) {
  RangeCN = 0,
  RangeAF = 1,
  RangeAX = 2,
  RangeAL = 3,
  RangeDZ = 4,
  RangeAS = 5,
  RangeAD = 6,
  RangeAO = 7,
  RangeAI = 8,
  RangeAQ = 9,
  RangeAG = 10,
  RangeAR = 11,
  RangeAM = 12,
  RangeAW = 13,
  RangeAU = 14,
  RangeAT = 15,
  RangeAZ = 16,
  RangeBS = 17,
  RangeBH = 18,
  RangeBD = 19,
  RangeBB = 20,
  RangeBY = 21,
  RangeBE = 22,
  RangeBZ = 23,
  RangeBJ = 24,
  RangeBM = 25,
  RangeBT = 26,
  RangeBO = 27,
  RangeBQ = 28,
  RangeBA = 29,
  RangeBW = 30,
  RangeBV = 31,
  RangeBR = 32,
  RangeIO = 33,
  RangeBN = 34,
  RangeBG = 35,
  RangeBF = 36,
  RangeBI = 37,
  RangeCV = 38,
  RangeKH = 39,
  RangeCM = 40,
  RangeCA = 41,
  RangeKY = 42,
  RangeCF = 43,
  RangeTD = 44,
  RangeCL = 45,
  RangeCX = 46,
  RangeCC = 47,
  RangeCO = 48,
  RangeKM = 49,
  RangeCG = 50,
  RangeCD = 51,
  RangeCK = 52,
  RangeCR = 53,
  RangeCI = 54,
  RangeHR = 55,
  RangeCU = 56,
  RangeCW = 57,
  RangeCY = 58,
  RangeCZ = 59,
  RangeDK = 60,
  RangeDJ = 61,
  RangeDM = 62,
  RangeDO = 63,
  RangeEC = 64,
  RangeEG = 65,
  RangeSV = 66,
  RangeGQ = 67,
  RangeER = 68,
  RangeEE = 69,
  RangeET = 70,
  RangeFK = 71,
  RangeFO = 72,
  RangeFJ = 73,
  RangeFI = 74,
  RangeFR = 75,
  RangeGF = 76,
  RangePF = 77,
  RangeTF = 78,
  RangeGA = 79,
  RangeGM = 80,
  RangeGE = 81,
  RangeDE = 82,
  RangeGH = 83,
  RangeGI = 84,
  RangeGR = 85,
  RangeGL = 86,
  RangeGD = 87,
  RangeGP = 88,
  RangeGU = 89,
  RangeGT = 90,
  RangeGG = 91,
  RangeGN = 92,
  RangeGW = 93,
  RangeGY = 94,
  RangeHT = 95,
  RangeHM = 96,
  RangeVA = 97,
  RangeHN = 98,
  RangeHK = 99,
  RangeHU = 100,
  RangeIS = 101,
  RangeIN = 102,
  RangeID = 103,
  RangeIR = 104,
  RangeIQ = 105,
  RangeIE = 106,
  RangeIM = 107,
  RangeIL = 108,
  RangeIT = 109,
  RangeJM = 110,
  RangeJP = 111,
  RangeJE = 112,
  RangeJO = 113,
  RangeKZ = 114,
  RangeKE = 115,
  RangeKI = 116,
  RangeKP = 117,
  RangeKR = 118,
  RangeKW = 119,
  RangeKG = 120,
  RangeLA = 121,
  RangeLV = 122,
  RangeLB = 123,
  RangeLS = 124,
  RangeLR = 125,
  RangeLY = 126,
  RangeLI = 127,
  RangeLT = 128,
  RangeLU = 129,
  RangeMO = 130,
  RangeMK = 131,
  RangeMG = 132,
  RangeMW = 133,
  RangeMY = 134,
  RangeMV = 135,
  RangeML = 136,
  RangeMT = 137,
  RangeMH = 138,
  RangeMQ = 139,
  RangeMR = 140,
  RangeMU = 141,
  RangeYT = 142,
  RangeMX = 143,
  RangeFM = 144,
  RangeMD = 145,
  RangeMC = 146,
  RangeMN = 147,
  RangeME = 148,
  RangeMS = 149,
  RangeMA = 150,
  RangeMZ = 151,
  RangeMM = 152,
  RangeNA = 153,
  RangeNR = 154,
  RangeNP = 155,
  RangeNL = 156,
  RangeNC = 157,
  RangeNZ = 158,
  RangeNI = 159,
  RangeNE = 160,
  RangeNG = 161,
  RangeNU = 162,
  RangeNF = 163,
  RangeMP = 164,
  RangeNO = 165,
  RangeOM = 166,
  RangePK = 167,
  RangePW = 168,
  RangePS = 169,
  RangePA = 170,
  RangePG = 171,
  RangePY = 172,
  RangePE = 173,
  RangePH = 174,
  RangePN = 175,
  RangePL = 176,
  RangePT = 177,
  RangePR = 178,
  RangeQA = 179,
  RangeRE = 180,
  RangeRO = 181,
  RangeRU = 182,
  RangeRW = 183,
  RangeBL = 184,
  RangeSH = 185,
  RangeKN = 186,
  RangeLC = 187,
  RangeMF = 188,
  RangePM = 189,
  RangeVC = 190,
  RangeWS = 191,
  RangeSM = 192,
  RangeST = 193,
  RangeSA = 194,
  RangeSN = 195,
  RangeRS = 196,
  RangeSC = 197,
  RangeSL = 198,
  RangeSG = 199,
  RangeSX = 200,
  RangeSK = 201,
  RangeSI = 202,
  RangeSB = 203,
  RangeSO = 204,
  RangeZA = 205,
  RangeGS = 206,
  RangeSS = 207,
  RangeES = 208,
  RangeLK = 209,
  RangeSD = 210,
  RangeSR = 211,
  RangeSJ = 212,
  RangeSZ = 213,
  RangeSE = 214,
  RangeCH = 215,
  RangeSY = 216,
  RangeTW = 217,
  RangeTJ = 218,
  RangeTZ = 219,
  RangeTH = 220,
  RangeTL = 221,
  RangeTG = 222,
  RangeTK = 223,
  RangeTO = 224,
  RangeTT = 225,
  RangeTN = 226,
  RangeTR = 227,
  RangeTM = 228,
  RangeTC = 229,
  RangeTV = 230,
  RangeUG = 231,
  RangeUA = 232,
  RangeAE = 233,
  RangeGB = 234,
  RangeUS = 235,
  RangeUM = 236,
  RangeUY = 237,
  RangeUZ = 238,
  RangeVU = 239,
  RangeVE = 240,
  RangeVN = 241,
  RangeVG = 242,
  RangeVI = 243,
  RangeWF = 244,
  RangeEH = 245,
  RangeYE = 246,
  RangeZM = 247,
  RangeZW = 248,
};

SWIFT_CLASS("_TtC11QWeatherSDK5Refer")
@interface Refer : NSObject
/// 原始数据来源，或数据源说明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
/// 数据许可或版权声明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable license;
@end

SWIFT_CLASS("_TtC11QWeatherSDK28SolarElevationAngleParameter")
@interface SolarElevationAngleParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date time:(NSString * _Nonnull)time tz:(NSString * _Nonnull)tz alt:(NSString * _Nonnull)alt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK7Station")
@interface Station : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16StationPollutant")
@interface StationPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@end

SWIFT_CLASS("_TtC11QWeatherSDK5Storm")
@interface Storm : NSObject
/// 台风ID
@property (nonatomic, readonly, copy) NSString * _Nonnull stormId;
/// 台风名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 台风所处流域
@property (nonatomic, readonly, copy) NSString * _Nonnull basin;
/// 台风所处年份
@property (nonatomic, readonly, copy) NSString * _Nonnull year;
/// 是否为活跃台风。1 活跃台风，0 停编。
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13StormForecast")
@interface StormForecast : NSObject
/// 台风预报时间
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nullable moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nullable moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nullable move360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21StormForecastResponse")
@interface StormForecastResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<StormForecast *> * _Nonnull forecast;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormListParameter")
@interface StormListParameter : NSObject
+ (nonnull instancetype)instanceWithBasin:(enum Basin)basin year:(NSInteger)year SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK17StormListResponse")
@interface StormListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Storm *> * _Nonnull storm;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class StormWindRadius;
SWIFT_CLASS("_TtC11QWeatherSDK8StormNow")
@interface StormNow : NSObject
/// 台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14StormParameter")
@interface StormParameter : NSObject
+ (nonnull instancetype)instanceWithStormid:(NSString * _Nonnull)stormid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10StormTrack")
@interface StormTrack : NSObject
/// 当前台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormTrackResponse")
@interface StormTrackResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@property (nonatomic, readonly, strong) StormNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<StormTrack *> * _Nonnull track;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15StormWindRadius")
@interface StormWindRadius : NSObject
/// 东北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable neRadius;
/// 东南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable seRadius;
/// 西南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable swRadius;
/// 西北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable nwRadius;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11SubAirIndex")
@interface SubAirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10TideHourly")
@interface TideHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9TideTable")
@interface TideTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

typedef SWIFT_ENUM(NSInteger, Unit, open) {
  UnitMETRIC = 0,
  UnitIMPERIAL = 1,
};

SWIFT_CLASS("_TtC11QWeatherSDK7Warning")
@interface Warning : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull warningId;
@property (nonatomic, readonly, copy) NSString * _Nonnull sender;
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull startTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull endTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull severity;
@property (nonatomic, readonly, copy) NSString * _Nonnull severityColor;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeName;
@property (nonatomic, readonly, copy) NSString * _Nonnull urgency;
@property (nonatomic, readonly, copy) NSString * _Nonnull certainty;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull related;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WarningListParameter")
@interface WarningListParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(enum Range)range SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WarningLocation;
SWIFT_CLASS("_TtC11QWeatherSDK19WarningListResponse")
@interface WarningListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSArray<WarningLocation *> * _Nonnull warningLocList;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningLocation")
@interface WarningLocation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull locationId;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19WarningNowParameter")
@interface WarningNowParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningResponse")
@interface WarningResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Warning *> * _Nonnull warning;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12WeatherDaily")
@interface WeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhaseIcon;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull uvIndex;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WeatherDailyResponse")
@interface WeatherDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13WeatherHourly")
@interface WeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pop;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21WeatherHourlyResponse")
@interface WeatherHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10WeatherNow")
@interface WeatherNow : NSObject
/// 数据观测时间
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
/// 温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
/// 体感温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
/// 天气状况的图标代码，另请参考天气图标项目
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
/// 天气状况的文字描述，包括阴晴雨雪等天气状态的描述
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// 风向360角度
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
/// 风向
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
/// 风力等级
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
/// 风速，公里/小时
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 相对湿度，百分比数值
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
/// 过去1小时降水量，默认单位：毫米
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
/// 大气压强，默认单位：百帕
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 能见度，默认单位：公里
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
/// 云量，百分比数值。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
/// 露点温度。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18WeatherNowResponse")
@interface WeatherNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) WeatherNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16WeatherParameter")
@interface WeatherParameter : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull location;
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7K__) && __ARM_ARCH_7K__
// Generated by Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
#ifndef QWEATHERSDK_SWIFT_H
#define QWEATHERSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="QWeatherSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC11QWeatherSDK8AirColor")
@interface AirColor : NSObject
@property (nonatomic, readonly) NSInteger red;
@property (nonatomic, readonly) NSInteger green;
@property (nonatomic, readonly) NSInteger blue;
@property (nonatomic, readonly) double alpha;
@end

@class NSString;
SWIFT_CLASS("_TtC11QWeatherSDK8AirDaily")
@interface AirDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@end

@class Refer;
SWIFT_CLASS("_TtC11QWeatherSDK16AirDailyResponse")
@interface AirDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<AirDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class AirIndex;
@class Pollutant;
SWIFT_CLASS("_TtC11QWeatherSDK9AirHourly")
@interface AirHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

@class PrimaryPollutant;
@class Health;
SWIFT_CLASS("_TtC11QWeatherSDK8AirIndex")
@interface AirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) double aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@property (nonatomic, readonly, copy) NSString * _Nullable level;
@property (nonatomic, readonly, copy) NSString * _Nullable category;
@property (nonatomic, readonly, strong) AirColor * _Nonnull color;
@property (nonatomic, readonly, strong) PrimaryPollutant * _Nullable primaryPollutant;
@property (nonatomic, readonly, strong) Health * _Nullable health;
@end

SWIFT_CLASS("_TtC11QWeatherSDK6AirNow")
@interface AirNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class AirStation;
SWIFT_CLASS("_TtC11QWeatherSDK14AirNowResponse")
@interface AirNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) AirNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<AirStation *> * _Nonnull station;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class NSNumber;
SWIFT_CLASS("_TtC11QWeatherSDK12AirParameter")
@interface AirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirStation")
@interface AirStation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

@class Metadata;
@class Station;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1CurrentResponse")
@interface AirV1CurrentResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@property (nonatomic, readonly, copy) NSArray<Station *> * _Nonnull stations;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10AirV1Daily")
@interface AirV1Daily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastStartTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull forecastEndTime;
@property (nonatomic, readonly, copy) NSArray<AirIndex *> * _Nonnull indexes;
@property (nonatomic, readonly, copy) NSArray<Pollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18AirV1DailyResponse")
@interface AirV1DailyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirV1Daily *> * _Nonnull days;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19AirV1HourlyResponse")
@interface AirV1HourlyResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<AirHourly *> * _Nonnull hours;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14AirV1Parameter")
@interface AirV1Parameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AirV1StationParameter")
@interface AirV1StationParameter : NSObject
+ (nonnull instancetype)instanceWithLocationID:(NSString * _Nonnull)locationID lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class StationPollutant;
SWIFT_CLASS("_TtC11QWeatherSDK20AirV1StationResponse")
@interface AirV1StationResponse : NSObject
@property (nonatomic, readonly, strong) Metadata * _Nonnull metadata;
@property (nonatomic, readonly, copy) NSArray<StationPollutant *> * _Nonnull pollutants;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22AstronomyMoonParameter")
@interface AstronomyMoonParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class MoonPhase;
SWIFT_CLASS("_TtC11QWeatherSDK21AstronomyMoonResponse")
@interface AstronomyMoonResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSArray<MoonPhase *> * _Nonnull moonPhase;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK36AstronomySolarElevationAngleResponse")
@interface AstronomySolarElevationAngleResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarElevationAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarAzimuthAngle;
@property (nonatomic, readonly, copy) NSString * _Nonnull solarHour;
@property (nonatomic, readonly, copy) NSString * _Nonnull hourAngle;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21AstronomySunParameter")
@interface AstronomySunParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20AstronomySunResponse")
@interface AstronomySunResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

/// The major global ocean basins.
/// <h2>Topics</h2>
/// <h3>Basins</h3>
/// <ul>
///   <li>
///     <code>AL</code>
///   </li>
///   <li>
///     <code>EP</code>
///   </li>
///   <li>
///     <code>NP</code>
///   </li>
///   <li>
///     <code>SP</code>
///   </li>
///   <li>
///     <code>NI</code>
///   </li>
///   <li>
///     <code>SI</code>
///   </li>
/// </ul>
/// <h3>Comparing Basins</h3>
/// <ul>
///   <li>
///     <code>!=(_:_:)</code>
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, Basin, open) {
/// North Atlantic
  BasinAL = 0,
/// Eastern Pacific
  BasinEP = 1,
/// NorthWest Pacific
  BasinNP = 2,
/// SouthWestern Pacific
  BasinSP = 3,
/// North Indian Ocean
  BasinNI = 4,
/// South Indian Ocean
  BasinSI = 5,
};

SWIFT_CLASS("_TtC11QWeatherSDK14CurrentsHourly")
@interface CurrentsHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speed;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13CurrentsTable")
@interface CurrentsTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull speedMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull dir360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11ErrorDetail")
@interface ErrorDetail : NSObject
@property (nonatomic, readonly) NSInteger status;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull detail;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable invalidParams;
@property (nonatomic, readonly, copy) NSString * _Nullable referenceDoc;
+ (ErrorDetail * _Nullable)fromMap:(NSDictionary<NSString *, id> * _Nonnull)map SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK13ErrorResponse")
@interface ErrorResponse : NSObject
@property (nonatomic, readonly, strong) ErrorDetail * _Nonnull error;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22GeoCityLookupParameter")
@interface GeoCityLookupParameter : NSObject
+ (GeoCityLookupParameter * _Nonnull)instanceWithLocation:(NSString * _Nonnull)location adm:(NSString * _Nullable)adm range:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class Location;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoCityLookupResponse")
@interface GeoCityLookupResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull location;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19GeoCityTopParameter")
@interface GeoCityTopParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(NSNumber * _Nullable)range number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GeoCityTopResponse")
@interface GeoCityTopResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull topCityList;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

enum Poi : NSInteger;
SWIFT_CLASS("_TtC11QWeatherSDK21GeoPoiLookupParameter")
@interface GeoPoiLookupParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type city:(NSString * _Nullable)city number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GeoPoiRangeParameter")
@interface GeoPoiRangeParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(enum Poi)type radius:(NSNumber * _Nullable)radius number:(NSNumber * _Nullable)number lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK14GeoPoiResponse")
@interface GeoPoiResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSArray<Location *> * _Nonnull poi;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9GridDaily")
@interface GridDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17GridDailyResponse")
@interface GridDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10GridHourly")
@interface GridHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18GridHourlyResponse")
@interface GridHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<GridHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK7GridNow")
@interface GridNow : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15GridNowResponse")
@interface GridNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) GridNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20GridWeatherParameter")
@interface GridWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HealthAdvice;
SWIFT_CLASS("_TtC11QWeatherSDK6Health")
@interface Health : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable effect;
@property (nonatomic, readonly, strong) HealthAdvice * _Nullable advice;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12HealthAdvice")
@interface HealthAdvice : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable generalPopulation;
@property (nonatomic, readonly, copy) NSString * _Nullable sensitivePopulation;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19HistoricalAirHourly")
@interface HistoricalAirHourly : NSObject
/// 空气质量数据发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 空气质量指数
@property (nonatomic, readonly, copy) NSString * _Nonnull aqi;
/// 空气质量指数等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 空气质量指数级别
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 空气质量的主要污染物，空气质量为优时，返回值为NA
@property (nonatomic, readonly, copy) NSString * _Nonnull primary;
/// PM10
@property (nonatomic, readonly, copy) NSString * _Nonnull pm10;
/// PM2.5
@property (nonatomic, readonly, copy) NSString * _Nonnull pm2p5;
/// 二氧化氮
@property (nonatomic, readonly, copy) NSString * _Nonnull no2;
/// 二氧化硫
@property (nonatomic, readonly, copy) NSString * _Nonnull so2;
/// 一氧化碳
@property (nonatomic, readonly, copy) NSString * _Nonnull co;
/// 臭氧
@property (nonatomic, readonly, copy) NSString * _Nonnull o3;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalAirParameter")
@interface HistoricalAirParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK21HistoricalAirResponse")
@interface HistoricalAirResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<HistoricalAirHourly *> * _Nonnull airHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22HistoricalWeatherDaily")
@interface HistoricalWeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK23HistoricalWeatherHourly")
@interface HistoricalWeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@end

SWIFT_CLASS("_TtC11QWeatherSDK26HistoricalWeatherParameter")
@interface HistoricalWeatherParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK25HistoricalWeatherResponse")
@interface HistoricalWeatherResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) HistoricalWeatherDaily * _Nonnull weatherDaily;
@property (nonatomic, readonly, copy) NSArray<HistoricalWeatherHourly *> * _Nonnull weatherHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Indices, open) {
  IndicesALL = 0,
  IndicesSPT = 1,
  IndicesCW = 2,
  IndicesDRSG = 3,
  IndicesFIS = 4,
  IndicesUV = 5,
  IndicesTRA = 6,
  IndicesAG = 7,
  IndicesCOMF = 8,
  IndicesFLU = 9,
  IndicesAP = 10,
  IndicesAC = 11,
  IndicesGL = 12,
  IndicesMU = 13,
  IndicesDC = 14,
  IndicesPTFC = 15,
  IndicesSPI = 16,
};

/// 天气指数
SWIFT_CLASS("_TtC11QWeatherSDK12IndicesDaily")
@interface IndicesDaily : NSObject
/// 预报日期
@property (nonatomic, readonly, copy) NSString * _Nonnull date;
/// 生活指数类型ID
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 生活指数类型的名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 生活指数预报等级
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
/// 生活指数预报级别名称
@property (nonatomic, readonly, copy) NSString * _Nonnull category;
/// 生活指数预报的详细描述，可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20IndicesDailyResponse")
@interface IndicesDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<IndicesDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16IndicesParameter")
@interface IndicesParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location type:(NSArray<NSNumber *> * _Nonnull)type lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Lang, open) {
  LangZH_HANS = 0,
  LangZH_HANT = 1,
  LangEN = 2,
  LangDE = 3,
  LangES = 4,
  LangFR = 5,
  LangIT = 6,
  LangJA = 7,
  LangKO = 8,
  LangRU = 9,
  LangHI = 10,
  LangTH = 11,
  LangAR = 12,
  LangPT = 13,
  LangBN = 14,
  LangMS = 15,
  LangNL = 16,
  LangEL = 17,
  LangLA = 18,
  LangSV = 19,
  LangID = 20,
  LangPL = 21,
  LangTR = 22,
  LangCS = 23,
  LangET = 24,
  LangVI = 25,
  LangFIL = 26,
  LangFI = 27,
  LangHE = 28,
  LangIS = 29,
  LangNB = 30,
};

SWIFT_CLASS("_TtC11QWeatherSDK8Location")
@interface Location : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull cid;
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm2;
@property (nonatomic, readonly, copy) NSString * _Nonnull adm1;
@property (nonatomic, readonly, copy) NSString * _Nonnull country;
@property (nonatomic, readonly, copy) NSString * _Nonnull tz;
@property (nonatomic, readonly, copy) NSString * _Nonnull utcOffset;
@property (nonatomic, readonly, copy) NSString * _Nonnull isDst;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull rank;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Metadata")
@interface Metadata : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull tag;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK8Minutely")
@interface Minutely : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

SWIFT_CLASS("_TtC11QWeatherSDK17MinutelyParameter")
@interface MinutelyParameter : NSObject
+ (nonnull instancetype)instanceWithLongitude:(double)longitude latitude:(double)latitude lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK16MinutelyResponse")
@interface MinutelyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull summary;
@property (nonatomic, readonly, copy) NSArray<Minutely *> * _Nonnull minutely;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9MoonPhase")
@interface MoonPhase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull value;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull illumination;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21OceanCurrentsResponse")
@interface OceanCurrentsResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<CurrentsTable *> * _Nonnull currentsTable;
@property (nonatomic, readonly, copy) NSArray<CurrentsHourly *> * _Nonnull currentsHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14OceanParameter")
@interface OceanParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TideTable;
@class TideHourly;
SWIFT_CLASS("_TtC11QWeatherSDK17OceanTideResponse")
@interface OceanTideResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<TideTable *> * _Nonnull tideTable;
@property (nonatomic, readonly, copy) NSArray<TideHourly *> * _Nonnull tideHourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

typedef SWIFT_ENUM(NSInteger, Poi, open) {
  PoiSCENIC = 0,
/// 潮汐站点
  PoiCSTA = 1,
/// 潮流站点
  PoiTSTA = 2,
};

@class PollutantConcentration;
@class SubAirIndex;
SWIFT_CLASS("_TtC11QWeatherSDK9Pollutant")
@interface Pollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@property (nonatomic, readonly, copy) NSArray<SubAirIndex *> * _Nonnull subIndexes;
@end

SWIFT_CLASS("_TtC11QWeatherSDK22PollutantConcentration")
@interface PollutantConcentration : NSObject
@property (nonatomic, readonly) double value;
@property (nonatomic, readonly, copy) NSString * _Nonnull unit;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16PrimaryPollutant")
@interface PrimaryPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@end

typedef SWIFT_ENUM(NSInteger, QWeatherErrorStatus, open) {
  QWeatherErrorStatusNotToken = 101,
  QWeatherErrorStatusCommon = 102,
  QWeatherErrorStatusErrorResponse = 103,
};

@class NSError;
@class WeatherParameter;
@class WeatherNowResponse;
@class WeatherDailyResponse;
@class WeatherHourlyResponse;
@class WarningNowParameter;
@class WarningResponse;
@class WarningListParameter;
@class WarningListResponse;
@class StormListParameter;
@class StormListResponse;
@class StormParameter;
@class StormForecastResponse;
@class StormTrackResponse;
@class SolarElevationAngleParameter;
SWIFT_CLASS("_TtC11QWeatherSDK12QWeatherObjc")
@interface QWeatherObjc : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)initConfigWithHost:(NSString * _Nonnull)host SWIFT_METHOD_FAMILY(none);
+ (void)setupHost:(NSString * _Nonnull)host;
+ (void)setupTokenGeneratorWithGenerater:(NSString * _Nonnull (^ _Nonnull)(void))generater;
+ (void)setupTokenGeneratorWithPrivateKey:(NSString * _Nonnull)privateKey pid:(NSString * _Nonnull)pid kid:(NSString * _Nonnull)kid;
+ (void)setupLogEnable:(BOOL)enable;
+ (void)geoCityLookup:(GeoCityLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityLookupResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoCityTop:(GeoCityTopParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoCityTopResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiLookup:(GeoPoiLookupParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)geoPoiRange:(GeoPoiRangeParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GeoPoiResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weatherNow:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather3d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather7d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather10d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather15d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather30d:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather24h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather72h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)weather168h:(WeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WeatherHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)minutely:(MinutelyParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(MinutelyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)gridNow:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid3d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid7d:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid24h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)grid72h:(GridWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(GridHourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningNow:(WarningNowParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)warningList:(WarningListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(WarningListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices1d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)indices3d:(IndicesParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(IndicesDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airNow:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirNowResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)air5d:(AirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirDailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airCurrent:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1CurrentResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airDaily:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1DailyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airHourly:(AirV1Parameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1HourlyResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)airStation:(AirV1StationParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AirV1StationResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalWeather:(HistoricalWeatherParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalWeatherResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)historicalAir:(HistoricalAirParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(HistoricalAirResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormList:(StormListParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormListResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormForecast:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormForecastResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)tropicalStormTrack:(StormParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(StormTrackResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanTide:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanTideResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)oceanCurrents:(OceanParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(OceanCurrentsResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySun:(AstronomySunParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySunResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomyMoon:(AstronomyMoonParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomyMoonResponse * _Nullable, NSError * _Nullable))completionHandler;
+ (void)astronomySolarElevationAngle:(SolarElevationAngleParameter * _Nonnull)parameter completionHandler:(void (^ _Nonnull)(AstronomySolarElevationAngleResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

typedef SWIFT_ENUM(NSInteger, Range, open) {
  RangeCN = 0,
  RangeAF = 1,
  RangeAX = 2,
  RangeAL = 3,
  RangeDZ = 4,
  RangeAS = 5,
  RangeAD = 6,
  RangeAO = 7,
  RangeAI = 8,
  RangeAQ = 9,
  RangeAG = 10,
  RangeAR = 11,
  RangeAM = 12,
  RangeAW = 13,
  RangeAU = 14,
  RangeAT = 15,
  RangeAZ = 16,
  RangeBS = 17,
  RangeBH = 18,
  RangeBD = 19,
  RangeBB = 20,
  RangeBY = 21,
  RangeBE = 22,
  RangeBZ = 23,
  RangeBJ = 24,
  RangeBM = 25,
  RangeBT = 26,
  RangeBO = 27,
  RangeBQ = 28,
  RangeBA = 29,
  RangeBW = 30,
  RangeBV = 31,
  RangeBR = 32,
  RangeIO = 33,
  RangeBN = 34,
  RangeBG = 35,
  RangeBF = 36,
  RangeBI = 37,
  RangeCV = 38,
  RangeKH = 39,
  RangeCM = 40,
  RangeCA = 41,
  RangeKY = 42,
  RangeCF = 43,
  RangeTD = 44,
  RangeCL = 45,
  RangeCX = 46,
  RangeCC = 47,
  RangeCO = 48,
  RangeKM = 49,
  RangeCG = 50,
  RangeCD = 51,
  RangeCK = 52,
  RangeCR = 53,
  RangeCI = 54,
  RangeHR = 55,
  RangeCU = 56,
  RangeCW = 57,
  RangeCY = 58,
  RangeCZ = 59,
  RangeDK = 60,
  RangeDJ = 61,
  RangeDM = 62,
  RangeDO = 63,
  RangeEC = 64,
  RangeEG = 65,
  RangeSV = 66,
  RangeGQ = 67,
  RangeER = 68,
  RangeEE = 69,
  RangeET = 70,
  RangeFK = 71,
  RangeFO = 72,
  RangeFJ = 73,
  RangeFI = 74,
  RangeFR = 75,
  RangeGF = 76,
  RangePF = 77,
  RangeTF = 78,
  RangeGA = 79,
  RangeGM = 80,
  RangeGE = 81,
  RangeDE = 82,
  RangeGH = 83,
  RangeGI = 84,
  RangeGR = 85,
  RangeGL = 86,
  RangeGD = 87,
  RangeGP = 88,
  RangeGU = 89,
  RangeGT = 90,
  RangeGG = 91,
  RangeGN = 92,
  RangeGW = 93,
  RangeGY = 94,
  RangeHT = 95,
  RangeHM = 96,
  RangeVA = 97,
  RangeHN = 98,
  RangeHK = 99,
  RangeHU = 100,
  RangeIS = 101,
  RangeIN = 102,
  RangeID = 103,
  RangeIR = 104,
  RangeIQ = 105,
  RangeIE = 106,
  RangeIM = 107,
  RangeIL = 108,
  RangeIT = 109,
  RangeJM = 110,
  RangeJP = 111,
  RangeJE = 112,
  RangeJO = 113,
  RangeKZ = 114,
  RangeKE = 115,
  RangeKI = 116,
  RangeKP = 117,
  RangeKR = 118,
  RangeKW = 119,
  RangeKG = 120,
  RangeLA = 121,
  RangeLV = 122,
  RangeLB = 123,
  RangeLS = 124,
  RangeLR = 125,
  RangeLY = 126,
  RangeLI = 127,
  RangeLT = 128,
  RangeLU = 129,
  RangeMO = 130,
  RangeMK = 131,
  RangeMG = 132,
  RangeMW = 133,
  RangeMY = 134,
  RangeMV = 135,
  RangeML = 136,
  RangeMT = 137,
  RangeMH = 138,
  RangeMQ = 139,
  RangeMR = 140,
  RangeMU = 141,
  RangeYT = 142,
  RangeMX = 143,
  RangeFM = 144,
  RangeMD = 145,
  RangeMC = 146,
  RangeMN = 147,
  RangeME = 148,
  RangeMS = 149,
  RangeMA = 150,
  RangeMZ = 151,
  RangeMM = 152,
  RangeNA = 153,
  RangeNR = 154,
  RangeNP = 155,
  RangeNL = 156,
  RangeNC = 157,
  RangeNZ = 158,
  RangeNI = 159,
  RangeNE = 160,
  RangeNG = 161,
  RangeNU = 162,
  RangeNF = 163,
  RangeMP = 164,
  RangeNO = 165,
  RangeOM = 166,
  RangePK = 167,
  RangePW = 168,
  RangePS = 169,
  RangePA = 170,
  RangePG = 171,
  RangePY = 172,
  RangePE = 173,
  RangePH = 174,
  RangePN = 175,
  RangePL = 176,
  RangePT = 177,
  RangePR = 178,
  RangeQA = 179,
  RangeRE = 180,
  RangeRO = 181,
  RangeRU = 182,
  RangeRW = 183,
  RangeBL = 184,
  RangeSH = 185,
  RangeKN = 186,
  RangeLC = 187,
  RangeMF = 188,
  RangePM = 189,
  RangeVC = 190,
  RangeWS = 191,
  RangeSM = 192,
  RangeST = 193,
  RangeSA = 194,
  RangeSN = 195,
  RangeRS = 196,
  RangeSC = 197,
  RangeSL = 198,
  RangeSG = 199,
  RangeSX = 200,
  RangeSK = 201,
  RangeSI = 202,
  RangeSB = 203,
  RangeSO = 204,
  RangeZA = 205,
  RangeGS = 206,
  RangeSS = 207,
  RangeES = 208,
  RangeLK = 209,
  RangeSD = 210,
  RangeSR = 211,
  RangeSJ = 212,
  RangeSZ = 213,
  RangeSE = 214,
  RangeCH = 215,
  RangeSY = 216,
  RangeTW = 217,
  RangeTJ = 218,
  RangeTZ = 219,
  RangeTH = 220,
  RangeTL = 221,
  RangeTG = 222,
  RangeTK = 223,
  RangeTO = 224,
  RangeTT = 225,
  RangeTN = 226,
  RangeTR = 227,
  RangeTM = 228,
  RangeTC = 229,
  RangeTV = 230,
  RangeUG = 231,
  RangeUA = 232,
  RangeAE = 233,
  RangeGB = 234,
  RangeUS = 235,
  RangeUM = 236,
  RangeUY = 237,
  RangeUZ = 238,
  RangeVU = 239,
  RangeVE = 240,
  RangeVN = 241,
  RangeVG = 242,
  RangeVI = 243,
  RangeWF = 244,
  RangeEH = 245,
  RangeYE = 246,
  RangeZM = 247,
  RangeZW = 248,
};

SWIFT_CLASS("_TtC11QWeatherSDK5Refer")
@interface Refer : NSObject
/// 原始数据来源，或数据源说明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable sources;
/// 数据许可或版权声明，可能为空
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nullable license;
@end

SWIFT_CLASS("_TtC11QWeatherSDK28SolarElevationAngleParameter")
@interface SolarElevationAngleParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location date:(NSString * _Nonnull)date time:(NSString * _Nonnull)time tz:(NSString * _Nonnull)tz alt:(NSString * _Nonnull)alt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK7Station")
@interface Station : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable stationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16StationPollutant")
@interface StationPollutant : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nonnull fullName;
@property (nonatomic, readonly, strong) PollutantConcentration * _Nonnull concentration;
@end

SWIFT_CLASS("_TtC11QWeatherSDK5Storm")
@interface Storm : NSObject
/// 台风ID
@property (nonatomic, readonly, copy) NSString * _Nonnull stormId;
/// 台风名称
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
/// 台风所处流域
@property (nonatomic, readonly, copy) NSString * _Nonnull basin;
/// 台风所处年份
@property (nonatomic, readonly, copy) NSString * _Nonnull year;
/// 是否为活跃台风。1 活跃台风，0 停编。
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13StormForecast")
@interface StormForecast : NSObject
/// 台风预报时间
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nullable moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nullable moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nullable move360;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21StormForecastResponse")
@interface StormForecastResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<StormForecast *> * _Nonnull forecast;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormListParameter")
@interface StormListParameter : NSObject
+ (nonnull instancetype)instanceWithBasin:(enum Basin)basin year:(NSInteger)year SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK17StormListResponse")
@interface StormListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Storm *> * _Nonnull storm;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

@class StormWindRadius;
SWIFT_CLASS("_TtC11QWeatherSDK8StormNow")
@interface StormNow : NSObject
/// 台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK14StormParameter")
@interface StormParameter : NSObject
+ (nonnull instancetype)instanceWithStormid:(NSString * _Nonnull)stormid SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK10StormTrack")
@interface StormTrack : NSObject
/// 当前台风信息发布时间
@property (nonatomic, readonly, copy) NSString * _Nonnull time;
/// 台风所处纬度
@property (nonatomic, readonly, copy) NSString * _Nonnull lat;
/// 台风所处经度
@property (nonatomic, readonly, copy) NSString * _Nonnull lon;
/// 台风类型
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
/// 台风中心气压
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 台风附近最大风速
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 台风移动速度
@property (nonatomic, readonly, copy) NSString * _Nonnull moveSpeed;
/// 台风移动方位
@property (nonatomic, readonly, copy) NSString * _Nonnull moveDir;
/// 台风移动方位360度方向
@property (nonatomic, readonly, copy) NSString * _Nonnull move360;
/// 台风7级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius30;
/// 台风10级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius50;
/// 台风12级风圈
@property (nonatomic, readonly, strong) StormWindRadius * _Nullable windRadius64;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18StormTrackResponse")
@interface StormTrackResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSString * _Nonnull isActive;
@property (nonatomic, readonly, strong) StormNow * _Nonnull now;
@property (nonatomic, readonly, copy) NSArray<StormTrack *> * _Nonnull track;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15StormWindRadius")
@interface StormWindRadius : NSObject
/// 东北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable neRadius;
/// 东南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable seRadius;
/// 西南半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable swRadius;
/// 西北半径，可能为空
@property (nonatomic, readonly, copy) NSString * _Nullable nwRadius;
@end

SWIFT_CLASS("_TtC11QWeatherSDK11SubAirIndex")
@interface SubAirIndex : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSString * _Nonnull aqiDisplay;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10TideHourly")
@interface TideHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@end

SWIFT_CLASS("_TtC11QWeatherSDK9TideTable")
@interface TideTable : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull height;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@end

typedef SWIFT_ENUM(NSInteger, Unit, open) {
  UnitMETRIC = 0,
  UnitIMPERIAL = 1,
};

SWIFT_CLASS("_TtC11QWeatherSDK7Warning")
@interface Warning : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull warningId;
@property (nonatomic, readonly, copy) NSString * _Nonnull sender;
@property (nonatomic, readonly, copy) NSString * _Nonnull pubTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull startTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull endTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
@property (nonatomic, readonly, copy) NSString * _Nonnull level;
@property (nonatomic, readonly, copy) NSString * _Nonnull severity;
@property (nonatomic, readonly, copy) NSString * _Nonnull severityColor;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeName;
@property (nonatomic, readonly, copy) NSString * _Nonnull urgency;
@property (nonatomic, readonly, copy) NSString * _Nonnull certainty;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull related;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WarningListParameter")
@interface WarningListParameter : NSObject
+ (nonnull instancetype)instanceWithRange:(enum Range)range SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class WarningLocation;
SWIFT_CLASS("_TtC11QWeatherSDK19WarningListResponse")
@interface WarningListResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSArray<WarningLocation *> * _Nonnull warningLocList;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningLocation")
@interface WarningLocation : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull locationId;
@end

SWIFT_CLASS("_TtC11QWeatherSDK19WarningNowParameter")
@interface WarningNowParameter : NSObject
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

SWIFT_CLASS("_TtC11QWeatherSDK15WarningResponse")
@interface WarningResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<Warning *> * _Nonnull warning;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK12WeatherDaily")
@interface WeatherDaily : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxDate;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull sunset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonrise;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonset;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhase;
@property (nonatomic, readonly, copy) NSString * _Nonnull moonPhaseIcon;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMax;
@property (nonatomic, readonly, copy) NSString * _Nonnull tempMin;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull textDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull iconNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull textNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Day;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedDay;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360Night;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDirNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScaleNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeedNight;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull uvIndex;
@end

SWIFT_CLASS("_TtC11QWeatherSDK20WeatherDailyResponse")
@interface WeatherDailyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherDaily *> * _Nonnull daily;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK13WeatherHourly")
@interface WeatherHourly : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull fxTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
@property (nonatomic, readonly, copy) NSString * _Nonnull pop;
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK21WeatherHourlyResponse")
@interface WeatherHourlyResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, copy) NSArray<WeatherHourly *> * _Nonnull hourly;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK10WeatherNow")
@interface WeatherNow : NSObject
/// 数据观测时间
@property (nonatomic, readonly, copy) NSString * _Nonnull obsTime;
/// 温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull temp;
/// 体感温度，默认单位：摄氏度
@property (nonatomic, readonly, copy) NSString * _Nonnull feelsLike;
/// 天气状况的图标代码，另请参考天气图标项目
@property (nonatomic, readonly, copy) NSString * _Nonnull icon;
/// 天气状况的文字描述，包括阴晴雨雪等天气状态的描述
@property (nonatomic, readonly, copy) NSString * _Nonnull text;
/// 风向360角度
@property (nonatomic, readonly, copy) NSString * _Nonnull wind360;
/// 风向
@property (nonatomic, readonly, copy) NSString * _Nonnull windDir;
/// 风力等级
@property (nonatomic, readonly, copy) NSString * _Nonnull windScale;
/// 风速，公里/小时
@property (nonatomic, readonly, copy) NSString * _Nonnull windSpeed;
/// 相对湿度，百分比数值
@property (nonatomic, readonly, copy) NSString * _Nonnull humidity;
/// 过去1小时降水量，默认单位：毫米
@property (nonatomic, readonly, copy) NSString * _Nonnull precip;
/// 大气压强，默认单位：百帕
@property (nonatomic, readonly, copy) NSString * _Nonnull pressure;
/// 能见度，默认单位：公里
@property (nonatomic, readonly, copy) NSString * _Nonnull vis;
/// 云量，百分比数值。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull cloud;
/// 露点温度。可能为空
@property (nonatomic, readonly, copy) NSString * _Nonnull dew;
@end

SWIFT_CLASS("_TtC11QWeatherSDK18WeatherNowResponse")
@interface WeatherNowResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull code;
@property (nonatomic, readonly, copy) NSString * _Nonnull updateTime;
@property (nonatomic, readonly, copy) NSString * _Nonnull fxLink;
@property (nonatomic, readonly, strong) WeatherNow * _Nonnull now;
@property (nonatomic, readonly, strong) Refer * _Nullable refer;
@end

SWIFT_CLASS("_TtC11QWeatherSDK16WeatherParameter")
@interface WeatherParameter : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull location;
+ (nonnull instancetype)instanceWithLocation:(NSString * _Nonnull)location lang:(NSNumber * _Nullable)lang unit:(NSNumber * _Nullable)unit SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
